// Code generated by Wire. DO NOT EDIT.

//go:generate go run github.com/google/wire/cmd/wire
//go:build !wireinject
// +build !wireinject

package internal

import (
	"fullStack-news-discord-bot/src/internal/application"
	"fullStack-news-discord-bot/src/internal/domain/event"
	"fullStack-news-discord-bot/src/internal/infrastructure/discord"
	event2 "fullStack-news-discord-bot/src/internal/interfaces/rest/event"
	"github.com/google/wire"
)

// Injectors from wire.go:

func InitializeEventRepository() event.Repository {
	eventRepository := discord.NewDiscordEventRepository()
	return eventRepository
}

func InitializeEventApplicationService() application.EventApplicationService {
	eventRepository := discord.NewDiscordEventRepository()
	eventApplicationService := application.NewEventApplicationService(eventRepository)
	return eventApplicationService
}

func InitializeCreateEventRestController() event2.CreateEventRestController {
	eventRepository := discord.NewDiscordEventRepository()
	eventApplicationService := application.NewEventApplicationService(eventRepository)
	createEventRestController := event2.NewCreateEventRestController(eventApplicationService)
	return createEventRestController
}

func InitializeCreateEventRestControllerWithMocks(mockEventRepository event.Repository) event2.CreateEventRestController {
	eventApplicationService := application.NewEventApplicationService(mockEventRepository)
	createEventRestController := event2.NewCreateEventRestController(eventApplicationService)
	return createEventRestController
}

// wire.go:

var providerSet wire.ProviderSet = wire.NewSet(application.NewEventApplicationService, discord.NewDiscordEventRepository, event2.NewCreateEventRestController, wire.Bind(new(event.Repository), new(discord.EventRepository)))

var providerSetForTesting wire.ProviderSet = wire.NewSet(application.NewEventApplicationService, discord.NewDiscordEventRepository, event2.NewCreateEventRestController)
